{"version":3,"sources":["PrintInvoice.js","SellerInfo.js","InvoiceInputForm.js","App.js","index.js"],"names":["PrintInvoice","data","total","sellerInfo","useState","invoiceID","setInvoiceID","isLoading","setIsLoading","SellerName","sellerName","VatNum","VATnumber","getTLVfromValue","tagNum","tagValue","bufsArray","Buffer","from","length","concat","updatingStyling","docStyle","sheet","invoice","hasPrinted","setProperty","style","a","row","document","getElementsByClassName","getElementById","documentElement","htmlToImage","quality","then","dataUrl","doc","jsPDF","imgProps","getImageProperties","imgHeight","height","width","heightLeft","position","addImage","addPage","save","catch","err","console","error","useEffect","Math","floor","random","toString","className","color","id","onClick","setTimeout","downloadPDF","window","print","storeName","storeAddress","storeCity","storePhone","value","order","Seller","VatReg","timeStamp","Date","toLocaleString","timeZone","log","tagsBufsArray","amount","vat","createQrCode","size","parseInt","clientWidth","toISOString","slice","map","i","describtion","qt","price","TableRow","SellerInfo","validation","validName","setValidName","validVAT","setValidVAT","seller","setSeller","vatNumber","setVatNumber","setStoreName","setStoreCity","setStoreAddress","setStorePhone","setError","element","message","inputControl","parentElement","errorDisplay","querySelector","placeholderElement","innerText","classList","add","remove","setSuccess","type","minLength","maxLength","placeholder","onKeyUp","nameCell","re","RegExp","name","trim","test","htmlFor","VATcell","Vat","city","address","phone","InvoiceInputForm","placedOrders","setPlacedOrders","showInvoice","setShowInvoice","$","ready","on","childElementCount","this","closest","form","createElement","descDiv","qtDiv","priceDiv","button","innerHTML","ReactDOMServer","renderToString","appendChild","children","orders","quantity","pricess","parseFloat","scrollTo","body","scrollHeight","App","setValidation","setSellerInfo","ReactDOM","render","StrictMode"],"mappings":"8PAee,SAASA,EAAT,GAAkD,IAA3BC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,WAC/C,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAEMC,EAAaN,EAAWO,WACxBC,EAASR,EAAWS,UAqB1B,SAASC,EAAgBC,EAAQC,GAC7B,IAIMC,EAAY,CAJHC,EAAOC,KAAK,CAACJ,GAAS,QACdG,EAAOC,KAAK,CAACH,EAASI,QAAS,QACpCF,EAAOC,KAAKH,EAAU,SAIxC,OAAOE,EAAOG,OAAOJ,GAyBzB,SAASK,EAAgBC,EAAUC,EAAOC,EAASC,GAE/C,GAAIA,EAaA,OAZAH,EAASI,YAAY,aAAc,iBACnCJ,EAASI,YAAY,iBAAkB,oBACvCJ,EAASI,YAAY,eAAgB,iBACrCJ,EAASI,YAAY,eAAgB,mBACrCJ,EAASI,YAAY,gBAAiB,mBACtCJ,EAASI,YAAY,iBAAkB,qBACvCJ,EAASI,YAAY,eAAgB,kBACrCJ,EAASI,YAAY,iBAAkB,qBACvCJ,EAASI,YAAY,iBAAkB,qBAEvCH,EAAMI,MAAN,wBACAH,EAAQG,MAAR,gBAKJL,EAASI,YAAY,aAAc,OACnCJ,EAASI,YAAY,iBAAkB,SACvCJ,EAASI,YAAY,eAAgB,OACrCJ,EAASI,YAAY,eAAgB,SACrCJ,EAASI,YAAY,gBAAiB,OACtCJ,EAASI,YAAY,iBAAkB,SACvCJ,EAASI,YAAY,eAAgB,SACrCJ,EAASI,YAAY,iBAAkB,SACvCJ,EAASI,YAAY,iBAAkB,SAEvCH,EAAMI,MAAN,eACAH,EAAQG,MAAR,eAxFwD,4CA2F5D,gCAAAC,EAAA,6DAGQC,EAAMC,SAASC,uBAAuB,OAAO,GAC7CP,EAAUM,SAASE,eAAe,WAItCX,EAHIC,EAAWQ,SAASG,gBAAgBN,MAGdE,EAAKL,GAAS,GAR5C,SAWUU,IAAkBV,EAAS,CAAEW,QAAS,MAC3CC,MAAK,SAAUC,GACZ,IAOIC,EAAM,IAAIC,IAAM,IAAK,KAAM,MACzBC,EAAUF,EAAIG,mBAAmBJ,GACnCK,EATW,IASCF,EAASG,OAAoBH,EAASI,MAClDC,EAAaH,EAGbI,EAAW,EAKf,IAHAR,EAAIS,SAASV,EAAS,MAAO,EAAGS,EAfjB,IAeqCJ,EAAW,GAAI,UACnEG,GAfiB,IAiBVA,GAAc,GACjBC,EAAWD,EAAaH,EACxBJ,EAAIU,UACJV,EAAIS,SAASV,EAAS,MAAO,EAAGS,EArBrB,IAqByCJ,EAAW,GAAI,UACnEG,GArBa,IAuBjBP,EAAIW,KAAK5C,EAAW,WAGrB+B,MAAK,WAEJf,EAAgBC,EAAUO,EAAKL,GAAS,MACzC0B,OAAM,SAACC,GAIN,OAFA9B,EAAgBC,EAAUO,EAAKL,GAAS,GACxC4B,QAAQC,MAAMF,GACPA,KA/Cf,4CA3F4D,sBAkK5D,OAhJAG,qBAAU,WACNhD,GAVO,KAAOiD,KAAKC,MAAM,IAAyB,IAAhBD,KAAKE,WAUrBC,cAIpB,IA4IE,mCACI,sBAAKC,UAAU,sDAAf,UAEKpD,EACG,sBAAKoD,UAAU,SAAf,UACI,qBAAKA,UAAU,SAAf,SAAwB,cAAC,IAAD,CAAMC,MAAM,UAAUjB,OAAQ,GAAIC,MAAO,OACjE,mBAAGe,UAAU,cAAb,wFAEK,GAEb,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,4BAAf,UAEI,wBAAQA,UAAU,kBAAkBE,GAAG,WAAWC,QAAS,WACvDtD,GAAa,GACbuD,YAAW,YAlLyB,2CAmLhCC,GAAc5B,MAAK,WACf5B,GAAa,QAElB,MANP,gDAUA,wBAAQmD,UAAU,kBAAkBE,GAAG,QAAQC,QAAS,WAChDG,OAAOC,SADf,+CAKJ,sBAAKP,UAAU,OAAOE,GAAG,UAAzB,UAEI,sBAAKF,UAAU,cAAf,UACI,yIACA,0DAGJ,sBAAKA,UAAU,WAAf,UACI,qBAAKA,UAAU,kCAAf,SACI,qBAAIA,UAAU,gBAAd,UACI,mBAAGA,UAAU,eAAb,SAA6BxD,EAAWgE,UAAYhE,EAAWgE,UAAY,sDAC3E,6BAAehE,EAAWiE,aAAejE,EAAWiE,aAAe,iEAA1D,KACT,6BAAejE,EAAWkE,UAAWlE,EAAWkE,UAAY,8CAAnD,KACT,6BAAelE,EAAWmE,WAAanE,EAAWmE,WAAa,2DAAtD,UAIjB,sBAAKT,GAAI,UAAUF,UAAU,2BAA7B,cAAyD,cAAC,IAAD,CAAQY,MA5KzF,SAAsBC,GAElB,IAAMC,EAAS5D,EAAgB,IAAKJ,GAE9BiE,EAAS7D,EAAgB,IAAKF,GAE9BgE,EAAY9D,EAAgB,KAAK,IAAI+D,MAAOC,eAAe,QAAS,CAACC,SAAU,iBACrF1B,QAAQ2B,MAER,IAIMC,EAAgB,CAACP,EAAQC,EAAQC,EAJjB9D,EAAgB,IAAK2D,EAAMS,QAE/BpE,EAAgB,IAAK2D,EAAMU,MAQ7C,OAJkBjE,EAAOG,OAAO4D,GACJtB,SAAS,UA4JuDyB,CAAa,CAAC,OAAWjF,EAAOwD,WAAY,KAAc,IAANxD,GAAYwD,aAAc0B,KAjMnKC,SAASvD,SAASG,gBAAgBqD,YAAY,GAAK,IAAKD,SAASvD,SAASG,gBAAgBqD,YAAY,GAAK,SAkM9F,sBAAK3B,UAAU,mCAAf,UACI,qBAAIA,UAAU,gBAAd,qBAAuCtD,KACvC,6EAAY,sBAAMsD,UAAU,oCAAhB,UAAqD,IAAIiB,MAAOW,cAAcC,MAAM,EAAG,eAG3G,qBAAK7B,UAAU,mBAAf,SACI,wBAAOA,UAAU,oBAAjB,UACI,uBAAOA,UAAU,mBAAjB,SACI,+BACI,oBAAIA,UAAU,eAAd,4CACA,oBAAIhC,MAAO,CAAC,UAAc,UAA1B,kDACA,oBAAIA,MAAO,CAAC,UAAc,UAA1B,iDAGR,uBAAOgC,UAAU,mBAAjB,SACK1D,EAAKwF,KAAI,SAAC5D,EAAK6D,GAAN,OAzE1C,SAAkBzF,EAAMyF,GACpB,OACI,+BACI,6BACI,oBAAI/B,UAAU,eAAd,SAA8B1D,EAAK0F,gBAEvC,oBAAIhE,MAAO,CAAC,UAAc,UAA1B,SAAsC1B,EAAK2F,KAC3C,oBAAIjE,MAAO,CAAC,UAAc,UAA1B,SAAqC,uBAAMgC,UAAU,uBAAhB,UAAwC1D,EAAK4F,MAA7C,wBALhCH,GAuEqCI,CAASjE,EAAK6D,aAKhD,sBAAK/B,UAAU,aAAf,UACI,qBAAKA,UAAU,cAAf,SACI,oBAAIA,UAAU,mBAAd,gEAEJ,qBAAKA,UAAU,uBAAf,SACI,uBAAOA,UAAU,cAAjB,SACI,kCACI,+BACI,qBAAIA,UAAU,mBAAd,wDAAyC,sBAAMA,UAAU,aAAhB,+IACzC,qBAAIA,UAAU,YAAd,UAA4BzD,EAAO2E,iBAAnC,uBAEJ,+BACI,qBAAIlB,UAAU,aAAd,4HAAgD,sBAAMA,UAAU,aAAhB,uBAChD,qBAAIA,UAAU,YAAd,WAAoC,IAARzD,GAAc2E,iBAA1C,uBAEJ,+BACI,oBAAIlB,UAAU,aAAd,yDACA,qBAAIA,UAAU,yBAAd,WACKzD,EAAiB,IAARA,GAAe2E,iBAD7B,+C,kPClQ7B,SAASkB,EAAT,GAA+C,IAA1BC,EAAyB,EAAzBA,WAAY7F,EAAa,EAAbA,WAC5C,EAAkCC,oBAAS,GAA3C,mBAAO6F,EAAP,KAAkBC,EAAlB,KACA,EAAgC9F,oBAAS,GAAzC,mBAAO+F,EAAP,KAAiBC,EAAjB,KACA,EAA4BhG,mBAAS,IAArC,mBAAOiG,EAAP,KAAeC,EAAf,KACA,EAAkClG,mBAAS,IAA3C,mBAAOmG,EAAP,KAAkBC,EAAlB,KACA,EAAkCpG,mBAAS,IAA3C,mBAAO+D,EAAP,KAAkBsC,EAAlB,KACA,EAAkCrG,mBAAS,IAA3C,mBAAOiE,EAAP,KAAkBqC,EAAlB,KACA,EAAwCtG,mBAAS,IAAjD,mBAAOgE,EAAP,KAAqBuC,EAArB,KACA,EAAoCvG,qBAApC,mBAAOkE,EAAP,KAAmBsC,EAAnB,KAkDA,SAASC,EAASC,EAASC,GACvB,IAAMC,EAAeF,EAAQG,cAEvBC,EAAeF,EAAaG,cAAc,UAC1CC,EAAqBJ,EAAaG,cAAc,gBAEtDD,EAAaG,UAAYN,EACzBK,EAAmBE,UAAUC,IAAI,QACjCH,EAAmBE,UAAUE,OAAO,WAGxC,SAASC,EAAWX,GAChB,IAAME,EAAeF,EAAQG,cAEvBC,EAAeF,EAAaG,cAAc,UAC1CC,EAAqBJ,EAAaG,cAAc,gBAEtDD,EAAaG,UAAY,GACzBD,EAAmBE,UAAUC,IAAI,WACjCH,EAAmBE,UAAUE,OAAO,QArCxClE,qBAAU,WACD2C,GAAcE,GAanBhG,EARmB,CACfO,WAAY2F,EACZzF,UAAY2F,EACZpC,UAAWA,EACXE,UAAWA,EACXD,aAAcA,EACdE,WAAYA,IAGhB0B,GAAW,IAZPA,GAAW,KAahB,CAAC7B,EAAWE,EAAWD,EAAcE,EAAY+B,EAAQE,EAAWN,EAAWE,IAqDlF,OACI,qCACA,qBAAKxC,UAAU,QAAf,qHACA,sBAAKA,UAAU,OAAf,UACI,sBAAKA,UAAU,sBAAf,UACI,uBAAOE,GAAG,kBAAkBF,UAAU,QAAQ+D,KAAK,OAAOC,UAAU,IAAIC,UAAU,KAAKC,YAAY,IAAIC,QAlC/F,WAChB,IAAMC,EAAWjG,SAASE,eAAe,mBACnCgG,EAAK,IAAIC,OAAO,gBAChBC,EAAQH,EAASxD,MAAM4D,OAE7B,OAAKH,EAAGI,KAAKF,IAAkB,KAATA,GAAeA,EAAK/G,OAAS,GAC/C0F,EAASkB,EAAU,4PACZ7B,GAAa,KAGxBuB,EAAWM,GACX7B,GAAa,GACNI,EAAU4B,OAuBT,qBAAKvE,UAAU,UACf,qBAAKA,UAAU,kBACf,wBAAO0E,QAAQ,kBAAkB1E,UAAU,cAA3C,sEAAqE,mBAAGhC,MAAO,CAAC,MAAS,MAAM,SAAW,SAArC,qBAEzE,sBAAKgC,UAAU,sBAAf,UACI,uBAAOE,GAAG,YAAYF,UAAU,QAAQ+D,KAAK,OAAOC,UAAU,IAAIC,UAAU,KAAKC,YAAY,IAAIC,QAzB1F,WACf,IAAMQ,EAAUxG,SAASE,eAAe,aAClCgG,EAAK,IAAIC,OAAO,YAChBM,EAAOD,EAAQ/D,MAAM4D,OAE3B,OAAIH,EAAGI,KAAKG,IAAuB,KAAfA,EAAIpH,QAIxBsG,EAAWa,GACXlC,GAAY,GACLI,EAAa+B,KALhB1B,EAASyB,EAAS,+IACXlC,GAAY,OAmBf,qBAAKzC,UAAU,UACnB,qBAAKA,UAAU,QACX,wBAAO0E,QAAQ,YAAY1E,UAAU,cAArC,uFAAiE,mBAAGhC,MAAO,CAAC,MAAS,MAAM,SAAW,SAArC,kBACjE,qBAAKgC,UAAU,gBAGvB,qBAAKA,UAAU,WAAf,6FACA,sBAAKA,UAAU,OAAf,UACI,sBAAKA,UAAU,sBAAf,UACI,uBAAOE,GAAG,aAAaF,UAAU,QAAQ+D,KAAK,OAAOG,YAAY,IAAIC,QAxHzD,WACpB,IACMI,EADWpG,SAASE,eAAe,cAClBuC,MAAM4D,OAC7B,OAAO1B,EAAayB,MAsHZ,qBAAKvE,UAAU,kBACf,uBAAO0E,QAAQ,aAAa1E,UAAU,cAAtC,kEAEJ,sBAAKA,UAAU,sBAAf,UACI,uBAAOE,GAAG,aAAaF,UAAU,QAAQ+D,KAAK,OAAOC,UAAU,IAAIC,UAAU,KAAKC,YAAY,IAAIC,QAxHtF,WACpB,IACMU,EADW1G,SAASE,eAAe,cAClBuC,MAAM4D,OAC7B,KAAIK,EAAO,GAGX,OAAO9B,EAAa8B,MAmHZ,qBAAK7E,UAAU,UACnB,qBAAKA,UAAU,uBACX,uBAAO0E,QAAQ,aAAa1E,UAAU,cAAtC,wDACA,qBAAKA,UAAU,aAEnB,sBAAKA,UAAU,sBAAf,UACI,0BAAUE,GAAG,gBAAgBF,UAAU,QAAQ+D,KAAK,OAAOG,YAAY,IAAIC,QAvH5D,WACvB,IACMW,EADU3G,SAASE,eAAe,iBACfuC,MAAM4D,OAC/B,KAAGM,EAAU,GAGb,OAAO9B,EAAgB8B,MAkHf,qBAAK9E,UAAU,UACf,qBAAKA,UAAU,kBACf,uBAAO0E,QAAQ,gBAAgB1E,UAAU,cAAzC,8EAEJ,sBAAKA,UAAU,sBAAf,UACI,uBAAOE,GAAG,cAAcF,UAAU,QAAQ+D,KAAK,OAAOC,UAAU,IAAIC,UAAU,KAAKC,YAAY,IAAIC,QArHtF,WACrB,IACMY,EADY5G,SAASE,eAAe,eACjBuC,MAAM4D,OAC/B,KAAGO,EAAQ,GAGX,OAAO9B,EAAc8B,MAgHb,qBAAK/E,UAAU,UACnB,qBAAKA,UAAU,kBACX,uBAAO0E,QAAQ,cAAc1E,UAAU,cAAvC,qEACA,qBAAKA,UAAU,mB,mECjJhB,SAASgF,EAAT,GAAyC,IAAdxI,EAAa,EAAbA,WACtC,EAAwCC,qBAAxC,mBAAOwI,EAAP,KAAqBC,EAArB,KACA,EAAsCzI,oBAAS,GAA/C,mBAAO0I,EAAP,KAAoBC,EAApB,KA+FA,OArEAC,IAAElH,UAAUmH,OAAM,WACdD,IAAE,uBAAuBE,GAAG,QAAS,eAAe,WACnCpH,SAASE,eAAe,sBAElBmH,kBACP,GAAGH,IAAEI,MAAMC,QAAQ,QAAQ7B,eAiE3C,qCACI,qBAAK7D,UAAU,QAAf,mGACA,qBAAKE,GAAG,qBAAR,SACI,sBAAKA,GAAG,MAAMF,UAAU,cAAxB,UACI,sBAAKA,UAAU,yBAAf,UACI,0BAAUE,GAAG,mBAAmBF,UAAU,QAAQ+D,KAAK,OAAOG,YAAY,MAC1E,qBAAKlE,UAAU,uBACf,uBAAO0E,QAAQ,mBAAmB1E,UAAU,cAA5C,+CAEJ,sBAAKA,UAAU,yBAAf,UACI,uBAAOE,GAAG,gBAAgBF,UAAU,QAAQ+D,KAAK,OAAOG,YAAY,MACpE,qBAAKlE,UAAU,uBACf,uBAAO0E,QAAQ,gBAAgB1E,UAAU,cAAzC,qDAEJ,sBAAKA,UAAU,mBAAf,UACI,uBAAOE,GAAG,aAAaF,UAAU,QAAQ+D,KAAK,OAAOG,YAAY,MACjE,qBAAKlE,UAAU,uBACf,uBAAO0E,QAAQ,YAAY1E,UAAU,cAArC,+CAEJ,sBAAKA,UAAU,kBAAf,UACI,cAAC,IAAD,CAAmByB,KAAM,GAAIzB,UAAU,eACvC,cAAC,IAAD,CAAsBA,UAAU,aAAayB,KAAM,GAAItB,QAvE3E,WACI,IAAMwF,EAAOxH,SAASE,eAAe,sBACjCH,EAAMC,SAASyH,cAAc,OAC7BC,EAAU1H,SAASyH,cAAc,OACjCE,EAAQ3H,SAASyH,cAAc,OAC/BG,EAAW5H,SAASyH,cAAc,OAClCI,EAAS7H,SAASyH,cAAc,OAEpC1H,EAAI8B,UAAY,cAChB9B,EAAIgC,GAAK,MAGT2F,EAAQ7F,UAAY,yBACpB8F,EAAM9F,UAAY,yBAClB+F,EAAS/F,UAAY,mBACrBgG,EAAOhG,UAAY,kBAGnB6F,EAAQI,UAAYC,IAAeC,eAC/B,qCACI,0BAAUjG,GAAG,mBAAmBF,UAAU,QAAQ+D,KAAK,OAAOG,YAAY,MAC1E,qBAAKlE,UAAU,uBACf,uBAAO0E,QAAQ,mBAAmB1E,UAAU,cAA5C,gDAGR8F,EAAMG,UAAYC,IAAeC,eAC7B,qCACI,uBAAOjG,GAAG,gBAAgBF,UAAU,QAAQ+D,KAAK,OAAOG,YAAY,MACpE,qBAAKlE,UAAU,uBACf,uBAAO0E,QAAQ,gBAAgB1E,UAAU,cAAzC,sDAGR+F,EAASE,UAAYC,IAAeC,eAChC,qCACI,uBAAOjG,GAAG,aAAaF,UAAU,QAAQ+D,KAAK,OAAOG,YAAY,MACjE,qBAAKlE,UAAU,uBACf,uBAAO0E,QAAQ,YAAY1E,UAAU,cAArC,gDAGRgG,EAAOC,UAAaC,IAAeC,eAAe,cAAC,IAAD,CAAmB1E,KAAM,GAAIzB,UAAU,gBAGzF9B,EAAIkI,YAAYP,GAChB3H,EAAIkI,YAAYN,GAChB5H,EAAIkI,YAAYL,GAChB7H,EAAIkI,YAAYJ,GAChBL,EAAKS,YAAYlI,cA6Bb,sBAAK8B,UAAU,cAAf,cAA8B,uBAAOA,UAAU,iCAAiC+D,KAAK,SAASnD,MAAM,iCAAQT,QAvHpH,WASI,IARA,IACMkG,EADQlI,SAASE,eAAe,sBACfgI,SACjBC,EAAS,GACX/J,EAAQ,EAENgK,EAAW,iBACXC,EAAU,cAEPzE,EAAI,EAAGA,EAAIsE,EAAS7I,OAAQuE,IACjCuE,EAAOvE,GAAM,CACT,YAAgBsE,EAAStE,GAAGyB,cANtB,qBAM2C5C,MAGjD,GAAOyF,EAAStE,GAAGyB,cAAc+C,GAAU3F,MAC3C,MAAS6F,WAAWJ,EAAStE,GAAGyB,cAAcgD,GAAS5F,QAE3DrE,GAAS8J,EAAStE,GAAGyB,cAAcgD,GAAS5F,MAAQyF,EAAStE,GAAGyB,cAAc+C,GAAU3F,MAE5F0F,EAAM,MAAY/J,EAClB2I,EAAgBoB,GAChBlB,GAAe,GACf9E,OAAOoG,SAAS,EAAGvI,SAASwI,KAAKC,cAAgBzI,SAASG,gBAAgBsI,iBAiGtE,OAECzB,EAAc,cAAC9I,EAAA,EAAD,CAAcC,KAAM2I,EAAc1I,MAAO0I,EAAa1I,MAAOC,WAAYA,IAAe,MCnHpGqK,MAXf,WACE,MAAoCpK,oBAAS,GAA7C,mBAAO4F,EAAP,KAAmByE,EAAnB,KACA,EAAoCrK,qBAApC,mBAAOD,EAAP,KAAmBuK,EAAnB,KACA,OACE,sBAAK/G,UAAU,MAAf,UACE,cAAC,EAAD,CAAYqC,WAAYyE,EAAetK,WAAYuK,IAClD1E,EAAa,cAAC,EAAD,CAAkB7F,WAAYA,IAAgB,SCVlEwK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF/I,SAASE,eAAe,W","file":"static/js/main.115e5ee9.chunk.js","sourcesContent":["import './styles/Invoice.css'\nimport * as htmlToImage from 'html-to-image';\nimport jsPDF from 'jspdf';\nimport QRCode from \"react-qr-code\";\nimport { useState, useEffect } from 'react';\nimport { Oval } from  'react-loader-spinner';\n// import addFont from './Cairo-Regular-normal';\n// import CairoRegularnormal from './CairoRegularnormal';\n// import html2canvas from 'html2canvas';\n// import html2pdf from 'html2pdf.js';\n// import ReactDOM from 'react-dom'\n// import $ from 'jquery'; \n// import jsPDF from 'jspdf';\n\n\nexport default function PrintInvoice({data, total, sellerInfo}) {\n    const [invoiceID, setInvoiceID] = useState(\"\")\n    const [isLoading, setIsLoading] = useState(false)\n\n    const SellerName = sellerInfo.sellerName\n    const VatNum = sellerInfo.VATnumber\n\n    //Generate Random Invoice Number\n    const ID = function () {\n        return '#B' + Math.floor(100000 + Math.random() * 900000);\n    };\n\n    //Determin the QR code size\n    const QrSize = function (){\n        // if screen width / 6 is larger than 100 return 100 otherwise return the screen width / 6\n        return parseInt(document.documentElement.clientWidth/6) < 100? parseInt(document.documentElement.clientWidth/6) : 100 \n    }\n\n    useEffect(() => {\n        setInvoiceID(ID().toString())\n        //Adding my custom font \"Cairo-Regular\" to jsPDF\n        // addFont();\n\n    },[])\n\n\n    function getTLVfromValue(tagNum, tagValue){\n        const tagBuf = Buffer.from([tagNum], 'utf8')\n        const tagValueLenBuf = Buffer.from([tagValue.length], 'utf8')\n        let tagValueBuf = Buffer.from(tagValue, 'utf8')\n        \n        const bufsArray = [tagBuf, tagValueLenBuf, tagValueBuf]\n        // console.log(bufsArray)\n        return Buffer.concat(bufsArray)\n    }\n    //Generate the QrCode using the Seller Name, VAT number, Time Stamp, Total amount & VAT amount buffer values\n    function createQrCode(order){\n        //seller Name\n        const Seller = getTLVfromValue(\"1\", SellerName)\n        //VAT Number\n        const VatReg = getTLVfromValue(\"2\", VatNum)\n        //Time Stamp\n        const timeStamp = getTLVfromValue(\"3\", new Date().toLocaleString(\"en-US\", {timeZone: \"Asia/Riyadh\"}))//new Date().toISOString())\n        console.log()\n        //Invoice Amount\n        const invoiceAmount = getTLVfromValue(\"4\", order.amount)\n        //VAT Amount\n        const VatAmount = getTLVfromValue(\"5\", order.vat)\n\n        const tagsBufsArray = [Seller, VatReg, timeStamp, invoiceAmount, VatAmount]\n\n        const qrCodeBuf = Buffer.concat(tagsBufsArray)\n        const qrCodeB64 = qrCodeBuf.toString('base64')\n\n\n        return qrCodeB64\n    }\n\n    function updatingStyling(docStyle, sheet, invoice, hasPrinted){\n        // if the prenting has been done update the styles to the original values\n        if (hasPrinted){\n            docStyle.setProperty('--s1vw_4em', 'min(1vw, 4em)');\n            docStyle.setProperty('--s1_3vw_0_8em', 'min(1.3vw, .8em)');\n            docStyle.setProperty('--s2_2vw_1em', 'min(2vw, 1em)');\n            docStyle.setProperty('--s2vw_1_1em', 'min(2vw, 1.1em)');\n            docStyle.setProperty('--s2_2vw_1_em', 'min(2.2vw, 1em)');\n            docStyle.setProperty('--s2_2vw_1_1em', 'min(2.2vw, 1.1em)');\n            docStyle.setProperty('--s2vw_0_9em', 'min(2vw, .9em)');\n            docStyle.setProperty('--s2_5vw_1_1em', 'min(2.5vw, 1.1em)');\n            docStyle.setProperty('--s2_4vw_1_2em', 'min(2.4vw, 1.2em)');\n            \n            sheet.style = `min(80vw, 55em);`\n            invoice.style = `width: 90vw;`;\n            return;\n        }\n        \n        //make the text bigger by updating the CSS custom vars\n        docStyle.setProperty('--s1vw_4em', '4em');\n        docStyle.setProperty('--s1_3vw_0_8em', '0.8em');\n        docStyle.setProperty('--s2_2vw_1em', '1em');\n        docStyle.setProperty('--s2vw_1_1em', '1.1em');\n        docStyle.setProperty('--s2_2vw_1_em', '1em');\n        docStyle.setProperty('--s2_2vw_1_1em', '1.1em');\n        docStyle.setProperty('--s2vw_0_9em', '0.9em');\n        docStyle.setProperty('--s2_5vw_1_1em', '1.1em');\n        docStyle.setProperty('--s2_4vw_1_2em', '1.2em');\n        // make the invoice sheet larger and the invoice fet the new width\n        sheet.style = `width: 55em;`\n        invoice.style = `width: 100%;`;\n    }\n    // Download a PDF of the invoice\n    async function downloadPDF(){\n        //Change Styling before printing\n        // let row = document.getElementsByClassName(\"row\")[0]\n        let row = document.getElementsByClassName(\"row\")[0]\n        let invoice = document.getElementById(\"invoice\")\n        let docStyle = document.documentElement.style;\n\n        //Updating the #Invoice styles in order to make the pdf consistent across diffrent screen sizes\n        updatingStyling(docStyle, row, invoice, false);\n        \n        //Print the Invoice\n        await htmlToImage.toPng(invoice, { quality: 0.95 })\n        .then(function (dataUrl) {\n            let imgWidth = 210; \n            let pageHeight = 295;  \n            /*\n                Here are the numbers (paper width and height) that I found to work. \n                It still creates a little overlap part between the pages.\n            */\n            // let doc = new jsPDF('p', 'mm');\n            let doc = new jsPDF('p', 'mm', 'a4');\n            const imgProps= doc.getImageProperties(dataUrl);\n            let imgHeight = imgProps.height * imgWidth / imgProps.width;\n            let heightLeft = imgHeight;\n            //setting the font\n            // doc.setFont(\"Cairo-Regular\", \"normal\");\n            let position = 0;\n\n            doc.addImage(dataUrl, 'PNG', 0, position, imgWidth, imgHeight, \"\", \"MEDIUM\");\n            heightLeft -= pageHeight;\n\n            while (heightLeft >= 0) {\n                position = heightLeft - imgHeight;\n                doc.addPage();\n                doc.addImage(dataUrl, 'PNG', 0, position, imgWidth, imgHeight, \"\", \"MEDIUM\");\n                heightLeft -= pageHeight;\n            }\n            doc.save(invoiceID+ '.pdf'); \n            //display the pdf in the iframe\n            // $(\"#order_print\").attr(\"src\", doc.output('bloburl'))\n        }).then(() => {\n            // restor the oringal styling\n            updatingStyling(docStyle, row, invoice, true);\n        }).catch((err) =>{\n            // restor the oringal styling\n            updatingStyling(docStyle, row, invoice, true);\n            console.error(err)\n            return err;\n        })\n\n        // htmlToImage.toPng(document.getElementById('qr_code'), { quality: 0.95 })\n        // .then(function (dataUrl) {\n        //     var link = document.createElement('a');\n        //     link.download = 'QrCode.png';\n        //     link.href = dataUrl;\n        //     link.click();\n        // });\n    }\n\n    // Adding all the rows from the input form to the invoice table\n    function TableRow(data, i){\n        return(\n            <tr key={i}>\n                <td>\n                    <h6 className='desc_section'>{data.describtion}</h6>\n                </td>\n                <td style={{'textAlign' : 'center'}}>{data.qt}</td>\n                <td style={{'textAlign' : 'center'}}><span className=\"font-weight-semibold\">{data.price} ر.س</span></td>\n            </tr>\n        )\n    }\n    return (\n        <>\n            <div className=\"container d-flex justify-content-center mt-50 mb-50\">\n                {/* Loader */}\n                {isLoading ? \n                    <div className='blurBG'> \n                        <div className=\"loader\"><Oval color=\"#00BFFF\" height={80} width={80}/></div>\n                        <b className='loader_text'>... جاري التحميل</b>\n                        {/** <Audio className=\"Loader\" height=\"100\" width=\"100\" color='white' ariaLabel='loading'/>*/}  \n                    </div> : \"\"}\n                \n                <div className=\"row\">\n                    <div className=\"col-md-12 text-right mb-3\"> \n                    {/**Download & print the Invoice Buttons */}\n                        <button className=\"btn btn-primary\" id=\"download\" onClick={() =>{\n                            setIsLoading(true);\n                            setTimeout(() => {\n                                downloadPDF().then(() => {\n                                    setIsLoading(false);\n                                })\n                            }, 500);\n                            \n                            }}>pdf تحميل</button>\n                            {/**Print the Invoice */}\n                        <button className='btn btn-primary' id=\"print\" onClick={() =>{\n                                window.print();\n                        }}>طباعة</button>\n                    </div>\n                    {/**the start of the invoice card */}\n                    <div className=\"card\" id=\"invoice\">\n                        {/** Header */}\n                        <div className=\"card-header\"> \n                            <p>فاتورة ضريبية مبسطة</p>\n                            <p>Simplified Tax Invoice</p>\n                        </div>\n                        {/** Store&Invoice Information */}\n                        <div className=\"info-row\">\n                            <div className=\"store_info_invoice invoice_info\">\n                                <ul className=\"list-unstyled\">\n                                    <b className=\"text-primary\">{sellerInfo.storeName ? sellerInfo.storeName : \"اسم المحل\"}</b>\n                                    <li key={\"1\"}>{sellerInfo.storeAddress ? sellerInfo.storeAddress : \"عنوان المحل\"}</li>\n                                    <li key={\"2\"}>{sellerInfo.storeCity? sellerInfo.storeCity : \"المدينة\"}</li>\n                                    <li key={\"3\"}>{sellerInfo.storePhone ? sellerInfo.storePhone : \"هاتف المحل\"}</li>\n                                </ul>\n                            </div>\n                            {/*console.log(parseInt(document.documentElement.clientWidth/6))**/}\n                            <div id= \"qr_code\" className=\"barcode-tag invoice_info\"> <QRCode value={createQrCode({'amount': (total).toString(), 'vat': (total*0.15).toString()})} size={QrSize()}/></div>\n                            <div className=\"invoice_date_number invoice_info\">\n                                <h6 className='invoice-color'>Invoice {invoiceID}</h6>\n                                <p>التاريخ: <span className=\"font-weight-semibold invoice_text\">{new Date().toISOString().slice(0, 10)}</span></p>\n                            </div>\n                        </div>\n                        <div className=\"table-responsive\">\n                            <table className=\"table print_table\">\n                                <thead className='print_table_head'>\n                                    <tr>\n                                        <th className='desc_section'>الوصف</th>\n                                        <th style={{'textAlign' : 'center'}}>الكمية</th>\n                                        <th style={{'textAlign' : 'center'}}>السعر</th>\n                                    </tr>\n                                </thead>\n                                <tbody className='print_table_body'>\n                                    {data.map((row, i) => TableRow(row, i))}\n                                </tbody>\n                            </table>\n                        </div>\n                        {/** Total Information */}\n                        <div className=\"total_body\">\n                            <div className=\"total-title\">\n                                <h6 className=\"total-tableTitle\">الإجمالي</h6>\n                            </div>\n                            <div className='checkout-table table'>\n                                <table className=\"total_table\">\n                                    <tbody >\n                                        <tr>\n                                            <th className=\"text-right total\">المجموع <span className=\"text-muted\">(غير شامل القيمة المضافة):</span></th>\n                                            <td className=\"text-left\">{(total).toLocaleString()} ر.س</td>\n                                        </tr>\n                                        <tr>\n                                            <th className=\"text-right\">ضريبة القيمة المضافة <span className=\"text-muted\">(15%):</span></th>\n                                            <td className=\"text-left\">{(total * 0.15).toLocaleString()} ر.س</td>\n                                        </tr>\n                                        <tr>\n                                            <th className=\"text-right\">المجموع:</th>\n                                            <td className=\"text-primary text-left\">\n                                               {(total + (total * 0.15)).toLocaleString()} ر.س\n                                            </td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                    {/*<iframe id=\"order_print\" type=\"application/pdf\" width=\"100%\" height=\"100%\"></iframe>*/}\n                </div>\n            </div>\n        </>\n    )\n}\n\n\n//prenting PDF\n// await html2canvas(invoice).then((canvas) => {\n    //     var imgData = canvas.toDataURL('image/png');\n    //     /*\n    //     Here are the numbers (paper width and height) that I found to work. \n    //     It still creates a little overlap part between the pages, but good enough for me.\n    //     if you can find an official number from jsPDF, use them.\n    //     */\n    //     let imgWidth = 210; \n    //     let pageHeight = 295;  \n    //     let imgHeight = canvas.height * imgWidth / canvas.width;\n    //     let heightLeft = imgHeight;\n\n    //     // let doc = new jsPDF('p', 'mm');\n    //     let doc = new jsPDF('p', 'mm', 'a4');\n    //     doc.setFont(\"Cairo-Regular\", \"normal\");\n    //     console.log(doc.getFontList())\n    //     // doc.setFont('Cairo-Regular', 'normal');\n    //     let position = 0;\n\n    //     doc.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight, \"\", \"MEDIUM\");\n    //     heightLeft -= pageHeight;\n\n    //     while (heightLeft >= 0) {\n    //         position = heightLeft - imgHeight;\n    //         doc.addPage();\n    //         doc.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight, \"\", \"MEDIUM\");\n    //         heightLeft -= pageHeight;\n    //     }\n    //     doc.save(invoiceID+ '.pdf'); \n    // }).then(() => {\n    //     // restor the oringal styling\n    //     updatingStyling(docStyle, row, invoice, true);\n    // }).catch((err) =>{\n    //     // restor the oringal styling\n    //     updatingStyling(docStyle, row, invoice, true);\n    //     console.error(err)\n    //     return err;\n    // })\n    \n    // const imgProps= pdf.getImageProperties(dataUrl);\n    // const pdfWidth = pdf.internal.pageSize.getWidth();\n    // const pdfHeight = (imgProps.height * pdfWidth) / imgProps.width;\n    // pdf.addImage(dataUrl, 'PNG', 0, 0, pdfWidth, pdfHeight);\n    // pdf.save(\"download.pdf\"); \n\n    // htmlToImage.toPng(document.getElementById('invoice'), { quality: 0.95 })\n    // .then(function (dataUrl) {\n    //     let link = document.createElement('a');\n    //     link.download = 'my-image-name.jpeg';\n    //     const pdf = new jsPDF() //('l', 'in', [842.4, 1188]);\n    //     const imgProps= pdf.getImageProperties(dataUrl);\n    //     const pdfWidth = pdf.internal.pageSize.getWidth();\n    //     const pdfHeight = (imgProps.height * pdfWidth) / imgProps.width;\n    //     let y = 500 // Height position of new content\n        \n    //     pdf.addImage(dataUrl, 'PNG', 0, 0, pdfWidth, pdfHeight);\n    //     // pdf.addImage(dataUrl,0,0,canvas.width,canvas.height);\n    //     if(pdfHeight > 365){ // I noticed 365 was the height of my page but for your landscape page it must be lower depending on your unit (pt, or mm or cm etc)\n    //         pdf.addPage();\n    //         pdf.addImage(dataUrl,0,-365,pdfWidth,pdfHeight);\n    //     }\n    //     pdf.save(\"download.pdf\"); \n    // });\n\n    //html2pdf method to print PDF\n    // function downloadPDF(){\n    //     const invoice = document.getElementById(\"invoice\");\n    //     let height = Math.max(invoice.scrollHeight, invoice.offsetHeight,\n    //         window.clientHeight, window.scrollHeight, window.offsetHeight)\n    //     let heightCM = height / 35.35\n    //     console.log(invoice);\n    //     // console.log(window);\n    //     var opt = {\n    //         margin: 1,\n    //         filename: 'myfile.pdf',\n    //         image: { type: 'jpeg', quality: 0.99 },\n    //         html2canvas: { dpi: 192, letterRendering: true },\n    //         jsPDF: { unit: 'in', format: 'letter', orientation: 'portrait' }\n    //     };\n    //     html2pdf().from(invoice).set(opt).save();\n    // }\n\n    ","import './styles/SellerInfo.css'\nimport { useEffect, useState } from 'react';\n\nexport default function SellerInfo({validation, sellerInfo}) {\n    const [validName, setValidName] = useState(false);\n    const [validVAT, setValidVAT] = useState(false);\n    const [seller, setSeller] = useState(\"\");\n    const [vatNumber, setVatNumber] = useState(\"\");\n    const [storeName, setStoreName] = useState(\"\");\n    const [storeCity, setStoreCity] = useState(\"\");\n    const [storeAddress, setStoreAddress] = useState(\"\");\n    const [storePhone, setStorePhone] = useState();\n\n    const updateStoreName = () => {\n        const nameCell = document.getElementById(\"store_name\")\n        const name =  nameCell.value.trim()\n        return setStoreName(name);\n    }\n    const updateStoreCity = () => {\n        const cityCell = document.getElementById(\"store_city\")\n        const city =  cityCell.value.trim()\n        if (city < 2 ){\n            return;\n        } \n        return setStoreCity(city);\n    }\n    const updateStoreAddress = () => {\n        const addCell = document.getElementById(\"store_address\")\n        const address =  addCell.value.trim()\n        if(address < 3){\n            return;\n        }\n        return setStoreAddress(address);\n    }\n    const updateStorePhone = () => {\n        const phoneCell = document.getElementById(\"store_phone\")\n        const phone =  phoneCell.value.trim()\n        if(phone < 6){\n            return;\n        }\n        return setStorePhone(phone);\n    }\n\n    useEffect(() => {\n        if (!validName || !validVAT){\n            // validation(false);\n            validation(false);\n            return;\n        } \n        const sellerinfo = {\n            sellerName: seller,\n            VATnumber : vatNumber,\n            storeName: storeName,\n            storeCity: storeCity,\n            storeAddress: storeAddress,\n            storePhone: storePhone\n        }\n        sellerInfo(sellerinfo)\n        validation(true)\n    }, [storeName, storeCity, storeAddress, storePhone, seller, vatNumber, validName, validVAT])\n\n    function setError(element, message){\n        const inputControl = element.parentElement;\n        // const inputControl = h6element.parentElement;\n        const errorDisplay = inputControl.querySelector('.error');\n        const placeholderElement = inputControl.querySelector('.placeholder');\n\n        errorDisplay.innerText = message;\n        placeholderElement.classList.add('fail');\n        placeholderElement.classList.remove('success')\n    }\n\n    function setSuccess(element){\n        const inputControl = element.parentElement;\n        // const inputControl = h6element.parentElement;\n        const errorDisplay = inputControl.querySelector('.error');\n        const placeholderElement = inputControl.querySelector('.placeholder');\n    \n        errorDisplay.innerText = '';\n        placeholderElement.classList.add('success');\n        placeholderElement.classList.remove('fail');\n    }\n\n    const isValidName = () => {\n        const nameCell = document.getElementById(\"seller-fullname\")\n        const re = new RegExp('^[a-zA-Z ]*$')\n        const name =  nameCell.value.trim()\n\n        if (!re.test(name) || name === \"\" || name.length < 6){\n            setError(nameCell, 'الاسم يجب ان يكون بالانجليزي وبدون فواصل او رموز');\n            return setValidName(false);\n        }\n        \n        setSuccess(nameCell);\n        setValidName(true);\n        return setSeller(name);\n    }\n\n    const isValidVAT = () => {\n        const VATcell = document.getElementById(\"vatnumber\")\n        const re = new RegExp('^[0-9]+$')\n        const Vat =  VATcell.value.trim()\n\n        if(!re.test(Vat) || Vat.length !== 15){\n            setError(VATcell, 'الرقم الضريبي يتكون من 15 رقم');\n            return setValidVAT(false);\n        }\n        setSuccess(VATcell);\n        setValidVAT(true);\n        return setVatNumber(Vat);\n    }\n\n    return (\n        <>\n        <div className=\"title\">المعلومات الضريبية</div>\n        <div className=\"form\">\n            <div className=\"input-container ic1\">\n                <input id=\"seller-fullname\" className=\"input\" type=\"text\" minLength=\"0\" maxLength=\"20\" placeholder=\" \" onKeyUp={isValidName} />   \n                <div className=\"error\"></div>  \n                <div className=\"cut cut-short\"></div>\n                <label htmlFor=\"seller-fullname\" className=\"placeholder\">اسم البائع  <b style={{'color': 'red','fontSize':' 15px'}}>*</b></label>\n            </div>\n            <div className=\"input-container ic1\">\n                <input id=\"vatnumber\" className=\"input\" type=\"text\" minLength=\"0\" maxLength=\"15\" placeholder=\" \" onKeyUp={isValidVAT}/>\n                <div className=\"error\"></div>\n            <div className=\"cut\"></div>\n                <label htmlFor=\"vatnumber\" className=\"placeholder\">الرقم الضريبي <b style={{'color': 'red','fontSize':' 15px'}}>*</b></label>\n                <div className=\"error\"></div>\n            </div>\n        </div>\n        <div className=\"subtitle\">معلومات البائع</div>\n        <div className=\"form\">\n            <div className=\"input-container ic1\">\n                <input id=\"store_name\" className=\"input\" type=\"text\" placeholder=\" \" onKeyUp={updateStoreName} />   \n                <div className=\"cut cut-short\"></div>\n                <label htmlFor=\"store_name\" className=\"placeholder\">اسم المحل</label>\n            </div>\n            <div className=\"input-container ic1\">\n                <input id=\"store_city\" className=\"input\" type=\"text\" minLength=\"0\" maxLength=\"15\" placeholder=\" \" onKeyUp={updateStoreCity}/>\n                <div className=\"error\"></div>\n            <div className=\"cut cut-very-short\"></div>\n                <label htmlFor=\"store_city\" className=\"placeholder\">المدينة</label>\n                <div className=\"error\"></div>\n            </div>\n            <div className=\"input-container ic1\">\n                <textarea id=\"store_address\" className=\"input\" type=\"text\" placeholder=\" \" onKeyUp={updateStoreAddress} />   \n                <div className=\"error\"></div>  \n                <div className=\"cut cut-short\"></div>\n                <label htmlFor=\"store_address\" className=\"placeholder\">عنوان المحل</label>\n            </div>\n            <div className=\"input-container ic1\">\n                <input id=\"store_phone\" className=\"input\" type=\"text\" minLength=\"0\" maxLength=\"10\" placeholder=\" \" onKeyUp={updateStorePhone}/>\n                <div className=\"error\"></div>\n            <div className=\"cut cut-short\"></div>\n                <label htmlFor=\"store_phone\" className=\"placeholder\">رقم الهاتف</label>\n                <div className=\"error\"></div>\n            </div>\n        </div>\n        </>\n    )\n}\n","import './styles/InvoiceInputForm.css';\nimport $ from 'jquery'; \nimport {useState} from 'react'\nimport ReactDOMServer from 'react-dom/server';\nimport PrintInvoice from './PrintInvoice.js';\nimport { BsFillPlusSquareFill } from 'react-icons/bs';\nimport { AiFillMinusSquare } from 'react-icons/ai';\n// import { createElement } from 'react/cjs/react.production.min';\n// import TestPrintedInvoice from './TestPrintedInvoice';\n\nexport default function InvoiceInputForm({sellerInfo}) {\n    const [placedOrders, setPlacedOrders] = useState()\n    const [showInvoice, setShowInvoice] = useState(false)\n\n    function iterateTable(){\n        const table = document.getElementById(\"invoice-input-form\");\n        const children = table.children;\n        const orders = [];\n        let total = 0\n        const descs = \"#item-description\"\n        const quantity = \"#item-quantity\"\n        const pricess = \"#item-price\"\n        \n        for (let i = 0; i < children.length; i++) {\n            orders[i] =  {\n                'describtion' : children[i].querySelector(descs).value,\n                // 'type' : types[i].value,\n                // 'weight': weights[i].value,\n                'qt' : children[i].querySelector(quantity).value,\n                'price': parseFloat(children[i].querySelector(pricess).value)\n            }\n            total += children[i].querySelector(pricess).value * children[i].querySelector(quantity).value\n        }\n        orders['total'] = total;\n        setPlacedOrders(orders);\n        setShowInvoice(true);\n        window.scrollTo(0, document.body.scrollHeight || document.documentElement.scrollHeight);\n    }\n    $(document).ready(function () {\n        $(\"#invoice-input-form\").on('click', '.delete-btn', function () {\n            const form = document.getElementById('invoice-input-form');\n            // console.log(form)\n            const count = form.childElementCount\n            if (count > 1) $(this).closest('#row').remove();\n            // form.removeChild(form.lastChild);\n        });\n    })\n\n     //delete row from the form on delete button click\n    // function removeRow(){\n    //     const form = document.getElementById('invoice-input-form');\n    //     console.log(form)\n    //     const count = form.childElementCount\n    //     if (count < 2) return\n    //     form.removeChild(form.lastChild);\n    // }\n\n    // insert new row to the form when add button is clicked\n    function insertNewItem(){\n        const form = document.getElementById(\"invoice-input-form\");\n        var row = document.createElement('div') \n        var descDiv = document.createElement('div')\n        var qtDiv = document.createElement('div')\n        var priceDiv = document.createElement('div')\n        var button = document.createElement('div')\n\n        row.className = 'form-nowrap';\n        row.id = 'row'\n\n        //Add classes\n        descDiv.className = \"input-nowrap flx-3 ic1\";\n        qtDiv.className = \"input-nowrap flx-1 ic1\";\n        priceDiv.className = \"input-nowrap ic1\";\n        button.className = \"buttons-control\"\n\n        // Add elements to the divs\n        descDiv.innerHTML = ReactDOMServer.renderToString(\n            <>\n                <textarea id=\"item-description\" className=\"input\" type=\"text\" placeholder=\" \"/>   \n                <div className=\"cut cut-very-short\"></div>\n                <label htmlFor=\"item-description\" className=\"placeholder\">الوصف</label>\n            </>)\n        \n        qtDiv.innerHTML = ReactDOMServer.renderToString(\n            <>\n                <input id=\"item-quantity\" className=\"input\" type=\"text\" placeholder=\" \"/>\n                <div className=\"cut cut-very-short\"></div>\n                <label htmlFor=\"item-quantity\" className=\"placeholder\">الكمية</label>\n            </>)\n\n        priceDiv.innerHTML = ReactDOMServer.renderToString(\n            <>\n                <input id=\"item-price\" className=\"input\" type=\"text\" placeholder=\" \"/>\n                <div className=\"cut cut-very-short\"></div>\n                <label htmlFor=\"tem-price\" className=\"placeholder\">السعر</label>\n            </>)\n\n        button.innerHTML =  ReactDOMServer.renderToString(<AiFillMinusSquare size={23} className=\"delete-btn\"/>); \n        \n        // insert divs to the row then to the form\n        row.appendChild(descDiv)\n        row.appendChild(qtDiv)\n        row.appendChild(priceDiv)\n        row.appendChild(button)\n        form.appendChild(row)\n    }\n\n    return (\n        <>\n            <div className=\"title\">تفاصيل الفاتورة</div>\n            <div id=\"invoice-input-form\">\n                <div id='row' className=\"form-nowrap\">\n                    <div className=\"input-nowrap flx-3 ic1\">\n                        <textarea id=\"item-description\" className=\"input\" type=\"text\" placeholder=\" \"/>   \n                        <div className=\"cut cut-very-short\"></div>\n                        <label htmlFor=\"item-description\" className=\"placeholder\">الوصف</label>\n                    </div>\n                    <div className=\"input-nowrap flx-1 ic1\">\n                        <input id=\"item-quantity\" className=\"input\" type=\"text\" placeholder=\" \"/>\n                        <div className=\"cut cut-very-short\"></div>\n                        <label htmlFor=\"item-quantity\" className=\"placeholder\">الكمية</label>\n                    </div>\n                    <div className=\"input-nowrap ic1\">\n                        <input id=\"item-price\" className=\"input\" type=\"text\" placeholder=\" \"/>\n                        <div className=\"cut cut-very-short\"></div>\n                        <label htmlFor=\"tem-price\" className=\"placeholder\">السعر</label>\n                    </div>\n                    <div className='buttons-control'>\n                        <AiFillMinusSquare size={23} className=\"delete-btn\"/> \n                        <BsFillPlusSquareFill className=\"insert-btn\" size={19} onClick={insertNewItem}/>\n                    </div>\n                </div>\n            </div>\n            <div className=\"form-submit\"> <input className=\"btn btn-primary form-submitBtb\" type=\"submit\" value=\"إصدار\" onClick={iterateTable}/> </div>\n\n            {showInvoice ? <PrintInvoice data={placedOrders} total={placedOrders.total} sellerInfo={sellerInfo}/>: \"\"}\n        </>\n    )\n}\n","import './styles/App.css'\nimport {useState } from 'react';\n// import Invoice from './Incoive.js'\nimport SellerInfo from './SellerInfo';\nimport InvoiceInputForm from './InvoiceInputForm';\n// import TestInputForm from './TestInputForm';\n// import TestInvoiceInputForm from './TestInvoiceInputForm1';\n\n\nfunction App() {\n  const [validation, setValidation] = useState(false)\n  const [sellerInfo, setSellerInfo] = useState()\n  return (\n    <div className=\"App\">\n      <SellerInfo validation={setValidation} sellerInfo={setSellerInfo}/>\n      {validation ? <InvoiceInputForm sellerInfo={sellerInfo}/> : null}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
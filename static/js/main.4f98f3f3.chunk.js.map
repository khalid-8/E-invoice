{"version":3,"sources":["PrintInvoice.js","SellerInfo.js","InvoiceInputForm.js","App.js","index.js"],"names":["PrintInvoice","data","total","sellerInfo","useState","invoiceID","setInvoiceID","isLoading","setIsLoading","qrCodeSize","setQrCodeSize","SellerName","sellerName","VatNum","VATnumber","QrSize","parseInt","document","documentElement","clientWidth","getTLVfromValue","tagNum","tagValue","tagBuf","Buffer","from","tagValueBuf","bufsArray","length","concat","updatingStyling","docStyle","sheet","invoice","hasPrinted","a","getElementsByClassName","style","removeProperty","setProperty","position","pages","invoiceHeight","clientHeight","row","getElementById","opt","margin","html2pdf","set","toPdf","get","then","pdfObj","deletePage","save","catch","err","console","error","useEffect","Math","floor","random","toString","className","id","onClick","setTimeout","downloadPDF","window","print","Date","toISOString","slice","value","order","tagsBufsArray","toLocaleString","timeZone","amount","vat","createQrCode","size","storeName","storeAddress","storeCity","storePhone","map","i","describtion","qt","price","TableRow","SellerInfo","validation","validName","setValidName","validVAT","setValidVAT","seller","setSeller","vatNumber","setVatNumber","setStoreName","setStoreCity","setStoreAddress","setStorePhone","setError","element","message","inputControl","parentElement","errorDisplay","querySelector","placeholderElement","innerText","classList","add","remove","setSuccess","type","minLength","maxLength","placeholder","onKeyUp","nameCell","name","trim","htmlFor","VATcell","re","RegExp","Vat","test","city","address","phone","InvoiceInputForm","placedOrders","setPlacedOrders","showInvoice","setShowInvoice","arToEng_nubers","el","target","a2e","replace","d","indexOf","$","ready","on","childElementCount","this","closest","onChange","e","form","createElement","descDiv","qtDiv","priceDiv","button","innerHTML","ReactDOMServer","renderToString","appendChild","children","orders","quantity","pricess","parseFloat","scrollTo","body","scrollHeight","App","setValidation","setSellerInfo","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4f98f3f3.chunk.js","sourcesContent":["import './styles/Invoice.css'\nimport QRCode from \"react-qr-code\";\nimport { useState, useEffect } from 'react';\nimport html2pdf from 'html2pdf.js';\n// import * as htmlToImage from 'html-to-image';\n// import jsPDF from 'jspdf';\n// import { Oval } from  'react-loader-spinner';\n// import addFont from './Cairo-Regular-normal';\n// import CairoRegularnormal from './CairoRegularnormal';\n// import html2canvas from 'html2canvas';\n// import ReactDOM from 'react-dom'\n// import $ from 'jquery'; \n\n\nexport default function PrintInvoice({data, total, sellerInfo}) {\n    const [invoiceID, setInvoiceID] = useState(\"\")\n    const [isLoading, setIsLoading] = useState(false)\n    const [qrCodeSize, setQrCodeSize] = useState()\n\n    const SellerName = sellerInfo.sellerName\n    const VatNum = sellerInfo.VATnumber\n\n    //Generate Random Invoice Number\n    const ID = function () {\n        return '#B' + Math.floor(100000 + Math.random() * 900000);\n    };\n\n    //Determin the QR code size\n    const QrSize = function (){\n        // if screen width / 6 is larger than 100 return 100 otherwise return the screen width / 6\n        return parseInt(document.documentElement.clientWidth/6) < 100? setQrCodeSize(parseInt(document.documentElement.clientWidth/6)) : setQrCodeSize(100)\n    }\n\n    useEffect(() => {\n        setInvoiceID(ID().toString())\n        QrSize()\n    },[])\n\n\n    function getTLVfromValue(tagNum, tagValue){\n        //encode the tag number\n        const tagBuf = Buffer.from([tagNum], 'utf8')\n        //encode the tag value\n        let tagValueBuf = Buffer.from(tagValue, 'utf8')\n        //encode the tag value length\n        const tagValueLenBuf = Buffer.from([tagValueBuf.length], 'utf8')\n        \n        const bufsArray = [tagBuf, tagValueLenBuf, tagValueBuf]\n        //concat and return the 3 buffers array into 1 byte array contains the TLV message \n        return Buffer.concat(bufsArray)\n    }\n    //Generate the QrCode using the Seller Name, VAT number, Time Stamp, Total amount & VAT amount buffer values\n    function createQrCode(order){\n        //seller Name\n        const Seller = getTLVfromValue(\"1\", SellerName)\n        //VAT Number\n        const VatReg = getTLVfromValue(\"2\", VatNum)\n        //Time Stamp\n        const timeStamp = getTLVfromValue(\"3\", new Date().toLocaleString(\"en-US\", {timeZone: \"Asia/Riyadh\"}))//new Date().toISOString())\n        //Invoice Amount\n        const invoiceAmount = getTLVfromValue(\"4\", order.amount)\n        //VAT Amount\n        const VatAmount = getTLVfromValue(\"5\", order.vat)\n\n        const tagsBufsArray = [Seller, VatReg, timeStamp, invoiceAmount, VatAmount]\n\n        const qrCodeBuf = Buffer.concat(tagsBufsArray)\n        const qrCodeB64 = qrCodeBuf.toString('base64')\n\n\n        return qrCodeB64\n    }\n\n    async function updatingStyling(docStyle, sheet, invoice, hasPrinted){\n        let total = document.getElementsByClassName('total_body')\n        // if the printing has completed update the styles to the original values\n        if (hasPrinted){\n            invoice.style.removeProperty(\"height\");\n            QrSize()\n            docStyle.setProperty('--s1vw_4em', 'min(1vw, 4em)');\n            docStyle.setProperty('--s1_3vw_0_8em', 'min(1.3vw, .8em)');\n            docStyle.setProperty('--s2_2vw_1em', 'min(2vw, 1em)');\n            docStyle.setProperty('--s2vw_1_1em', 'min(2vw, 1.1em)');\n            docStyle.setProperty('--s2_2vw_1_em', 'min(2.2vw, 1em)');\n            docStyle.setProperty('--s2_2vw_1_1em', 'min(2.2vw, 1.1em)');\n            docStyle.setProperty('--s2vw_1em', 'min(2vw, 1em)');\n            docStyle.setProperty('--s2_5vw_1_1em', 'min(2.5vw, 1.1em)');\n            docStyle.setProperty('--s2_4vw_1_2em', 'min(2.4vw, 1.2em)');\n            \n            sheet.style = `min(80vw, 55em);`\n            invoice.style = `width: 90vw;`;\n            total[0].style.position = 'relative'\n            return;\n        }\n\n        //Make the QR code bigger\n        setQrCodeSize(100)\n        //make the text bigger by updating the CSS custom vars\n        docStyle.setProperty('--s1vw_4em', '4em');\n        docStyle.setProperty('--s1_3vw_0_8em', '0.8em');\n        docStyle.setProperty('--s2_2vw_1em', '1em');\n        docStyle.setProperty('--s2vw_1_1em', '1.1em');\n        docStyle.setProperty('--s2_2vw_1_em', '1em');\n        docStyle.setProperty('--s2_2vw_1_1em', '1.1em');\n        docStyle.setProperty('--s2vw_1em', '1em');\n        docStyle.setProperty('--s2_5vw_1_1em', '1.1em');\n        docStyle.setProperty('--s2_4vw_1_2em', '1.2em');\n\n        let pages = 1\n        let invoiceHeight = invoice.clientHeight - 1004;\n        while (invoiceHeight >= 0){\n            pages += 1\n            invoiceHeight -= 1004;\n        }\n        // make the invoice sheet larger and the invoice fet the new width\n        sheet.style = `width: 55em;`\n        //\n        invoice.style = `width: 100%; height: ${pages*1004}px;`;\n\n        //position the total table at the end of the invoice\n        total[0].style.position = 'absolute'\n\n        // total[0].style = 'overflow: hidden;'\n    }\n    // Download a PDF of the invoice\n    async function downloadPDF(){\n\n        let row = document.getElementsByClassName(\"row\")[0]\n        let invoice = document.getElementById(\"invoice\")\n        let docStyle = document.documentElement.style;\n\n        //Updating the Invoice styles in order to make the pdf consistent across diffrent screen sizes\n        updatingStyling(docStyle, row, invoice, false);\n        var opt =\n            {\n                margin: [0, 0, 15, 0],\n            }\n        //Create and Save the PDF file using html2pdf.js\n        await html2pdf().set(opt).from(invoice).toPdf().get('pdf')\n        // You have access to the jsPDF object and can use it as desired.\n        .then(function (pdfObj) {\n            //Delete the first blank page\n            pdfObj.deletePage(1);\n            //Save the file\n            pdfObj.save(invoiceID+ '.pdf')\n        }).then(() => {\n            // restor the oringal styling\n            updatingStyling(docStyle, row, invoice, true);\n        }).catch((err) =>{\n            // restor the oringal styling\n            updatingStyling(docStyle, row, invoice, true);\n            console.error(err)\n            return err;\n        });\n        \n    }\n\n    // Adding all the rows from the input form to the invoice table\n    function TableRow(data, i){\n        return(\n            <tr key={i}>\n                <td className='itemNum'>{i+1}</td>\n                <td>\n                    <h6 className='desc_section'>{data.describtion}</h6>\n                </td>\n                <td className={i===19? \"firstPage\" : \"\"} style={{'textAlign' : 'center'}}>{data.qt}</td>\n                <td style={{'textAlign' : 'center'}}><span className=\"font-weight-semibold\">{data.price} ر.س</span></td>\n            </tr>\n        )\n    }\n    return (\n        <>\n            <div className=\"container d-flex justify-content-center mt-50 mb-50\">\n                {/* Loader */}\n                {isLoading ? \n                    <div className='blurBG'> \n                        <div className=\"loader\"></div>\n                        <b className='loader_text'>... جاري التحميل</b>\n                        {/** <Audio className=\"Loader\" height=\"100\" width=\"100\" color='white' ariaLabel='loading'/>*/}  \n                    </div>  : \"\"}\n                \n                <div className=\"row\">\n                    <div className=\"col-md-12 text-right mb-3\"> \n                    {/**Download & print the Invoice Buttons */}\n                        <button className=\"btn btn-primary\" id=\"download\" onClick={() =>{\n                            setIsLoading(true);\n                            setTimeout(() => {\n                                downloadPDF().then(() => {\n                                    setIsLoading(false);\n                                }).catch((err) =>{\n                                    setIsLoading(false);\n                                })\n                            }, 500);\n                            \n                            }}>pdf تحميل</button>\n                            {/**Print the Invoice */}\n                        <button className='btn btn-primary' id=\"print\" onClick={async () =>{\n                                await setQrCodeSize(100);\n                                window.print();\n                                QrSize() \n                                \n                        }}>طباعة</button>\n                    </div>\n                    {/**the start of the invoice card */}\n                    <div className=\"card\" id=\"invoice\">\n                        {/** Header */}\n                        <div className=\"card-header\"> \n                            <p>فاتورة ضريبية مبسطة</p>\n                            <p>Simplified Tax Invoice</p>\n                        </div>\n                        {/** Store&Invoice Information */}\n                        <div className=\"info-row\">\n                            <div className=\"invoice_date_number invoice_info\">\n                            <b className='invoice-color'>Invoice {invoiceID}</b>\n                            <p className='invoice-rs-info'>الرقم الضريبي: {VatNum}</p>\n                            <p className='invoice-rs-info'>التاريخ: <span className=\"font-weight-semibold invoice_text\">{new Date().toISOString().slice(0, 10)}</span></p>\n                        </div>\n                            {/*console.log(parseInt(document.documentElement.clientWidth/6))**/}\n                            <div id= \"qr_code\" className=\"barcode-tag invoice_info\"> <QRCode value={createQrCode({'amount': (total+(total*0.15)).toString(), 'vat': (total*0.15).toString()})} size={qrCodeSize}/></div>\n                            <div className=\"store_info_invoice invoice_info\">\n                                <ul className=\"list-unstyled\">\n                                    <b className=\"text-primary\">{sellerInfo.storeName ? sellerInfo.storeName : SellerName}</b>\n                                    <li key={\"1\"}>{sellerInfo.storeAddress ? sellerInfo.storeAddress : \"\"}</li>\n                                    <li key={\"2\"}>{sellerInfo.storeCity? sellerInfo.storeCity : \"\"}</li>\n                                    <li key={\"3\"}>{sellerInfo.storePhone ? sellerInfo.storePhone : \"\"}</li>\n                                </ul>\n                            </div>\n                        </div>\n                        <div className=\"table-responsive\">\n                            <table className=\"table print_table\">\n                                <thead className='print_table_head'>\n                                    <tr>\n                                        <th className='itemNum'>#</th>\n                                        <th className='desc_section'>الوصف</th>\n                                        <th style={{'textAlign' : 'center'}}>الكمية</th>\n                                        <th style={{'textAlign' : 'center'}}>السعر</th>\n                                    </tr>\n                                </thead>\n                                <tbody className='print_table_body'>\n                                    {data.map((row, i) => TableRow(row, i))}\n                                </tbody>\n                            </table>\n                        </div>\n                        {/** Total Information */}\n                        <div className=\"total_body\">\n                            <div className=\"total-title\">\n                                <h6 className=\"total-tableTitle\">الإجمالي</h6>\n                            </div>\n                            <div className='checkout-table table'>\n                                <table className=\"total_table\">\n                                    <tbody >\n                                        <tr>\n                                            <th className=\"text-right total\">المجموع <span className=\"text-muted\">(غير شامل القيمة المضافة):</span></th>\n                                            <td className=\"text-left\">{(total).toLocaleString()} ر.س</td>\n                                        </tr>\n                                        <tr>\n                                            <th className=\"text-right\">ضريبة القيمة المضافة <span className=\"text-muted\">(15%):</span></th>\n                                            <td className=\"text-left\">{(total * 0.15).toLocaleString()} ر.س</td>\n                                        </tr>\n                                        <tr>\n                                            <th className=\"text-right\">المجموع:</th>\n                                            <td className=\"text-primary text-left\">\n                                               {(total + (total * 0.15)).toLocaleString()} ر.س\n                                            </td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                    {/*<iframe id=\"order_print\" type=\"application/pdf\" width=\"100%\" height=\"100%\"></iframe>*/}\n                </div>\n            </div>\n        </>\n    )\n}\n\n    //Create and Save the PDF file using html2canvas & jsPDF\n    // await html2canvas(invoice, {\n    //     dpi: 300, // Set to 300 DPI\n    //     scale: 3, // Adjusts your resolution\n    // }).then((canvas) => {  \n    //     let imgWidth = 210; \n    //     let pageHeight = 295;  \n    //     /*\n    //         Here are the numbers (paper width and height) that I found to work. \n    //         It still creates a little overlap part between the pages.\n    //     */\n    //     let doc = new jsPDF('p', 'mm', 'a4');\n    //     const imgProps= doc.getImageProperties(canvas);\n    //     let imgHeight = imgProps.height * imgWidth / imgProps.width;\n    //     let heightLeft = imgHeight;\n    //     let position = 0;\n\n    //     doc.addImage(canvas, 'PNG', 0, position, imgWidth, imgHeight, \"\", \"MEDIUM\");\n    //     heightLeft -= pageHeight;\n    //     //15\n    //     while (heightLeft >= 0) {\n    //         position = heightLeft - imgHeight;\n    //         doc.addPage();\n    //         doc.addImage(canvas, 'PNG', 0, position, imgWidth, imgHeight, \"\", \"MEDIUM\");\n    //         heightLeft -= pageHeight;\n    //     }\n    //     doc.save(invoiceID+ '.pdf'); \n        \n    // }).then(() => {\n    //     // restor the oringal styling\n    //     updatingStyling(docStyle, row, invoice, true);\n    // }).catch((err) =>{\n    //     // restor the oringal styling\n    //     updatingStyling(docStyle, row, invoice, true);\n    //     console.error(err)\n    //     return err;\n    // });","import './styles/SellerInfo.css'\nimport { useEffect, useState } from 'react';\n\nexport default function SellerInfo({validation, sellerInfo}) {\n    const [validName, setValidName] = useState(false);\n    const [validVAT, setValidVAT] = useState(false);\n    const [seller, setSeller] = useState(\"\");\n    const [vatNumber, setVatNumber] = useState(\"\");\n    const [storeName, setStoreName] = useState(\"\");\n    const [storeCity, setStoreCity] = useState(\"\");\n    const [storeAddress, setStoreAddress] = useState(\"\");\n    const [storePhone, setStorePhone] = useState();\n\n    const updateStoreName = () => {\n        const nameCell = document.getElementById(\"store_name\")\n        const name =  nameCell.value.trim()\n        return setStoreName(name);\n    }\n    const updateStoreCity = () => {\n        const cityCell = document.getElementById(\"store_city\")\n        const city =  cityCell.value.trim()\n        if (city < 2 ){\n            return;\n        } \n        return setStoreCity(city);\n    }\n    const updateStoreAddress = () => {\n        const addCell = document.getElementById(\"store_address\")\n        const address =  addCell.value.trim()\n        if(address < 3){\n            return;\n        }\n        return setStoreAddress(address);\n    }\n    const updateStorePhone = () => {\n        const phoneCell = document.getElementById(\"store_phone\")\n        const phone =  phoneCell.value.trim()\n        if(phone < 6){\n            return;\n        }\n        return setStorePhone(phone);\n    }\n\n    useEffect(() => {\n        if (!validName || !validVAT){\n            // validation(false);\n            validation(false);\n            return;\n        } \n        const sellerinfo = {\n            sellerName: seller,\n            VATnumber : vatNumber,\n            storeName: storeName,\n            storeCity: storeCity,\n            storeAddress: storeAddress,\n            storePhone: storePhone\n        }\n        sellerInfo(sellerinfo)\n        validation(true)\n    }, [storeName, storeCity, storeAddress, storePhone, seller, vatNumber, validName, validVAT])\n\n    function setError(element, message){\n        const inputControl = element.parentElement;\n        // const inputControl = h6element.parentElement;\n        const errorDisplay = inputControl.querySelector('.error');\n        const placeholderElement = inputControl.querySelector('.placeholder');\n\n        errorDisplay.innerText = message;\n        placeholderElement.classList.add('fail');\n        placeholderElement.classList.remove('success')\n    }\n\n    function setSuccess(element){\n        const inputControl = element.parentElement;\n        // const inputControl = h6element.parentElement;\n        const errorDisplay = inputControl.querySelector('.error');\n        const placeholderElement = inputControl.querySelector('.placeholder');\n    \n        errorDisplay.innerText = '';\n        placeholderElement.classList.add('success');\n        placeholderElement.classList.remove('fail');\n    }\n\n    const isValidName = () => {\n        const nameCell = document.getElementById(\"seller-fullname\")\n        // const re = new RegExp('^[a-zA-Z ]*$')\n        const name =  nameCell.value.trim()\n\n        if (name === \"\" || name.length < 3){\n            setError(nameCell, 'يجب ادخال اسم المؤسسة كاملا'); \n            return setValidName(false);\n        }\n        \n        setSuccess(nameCell);\n        setValidName(true);\n        return setSeller(name);\n    }\n\n    const isValidVAT = () => {\n        const VATcell = document.getElementById(\"vatnumber\")\n        const re = new RegExp('^[0-9]+$')\n        const Vat =  VATcell.value.trim()\n\n        if(!re.test(Vat) || Vat.length !== 15){\n            setError(VATcell, 'الرقم الضريبي يتكون من 15 رقم');\n            return setValidVAT(false);\n        }\n        setSuccess(VATcell);\n        setValidVAT(true);\n        return setVatNumber(Vat);\n    }\n\n    return (\n        <>\n        <div className=\"title\">المعلومات الضريبية</div>\n        <div className=\"form\">\n            <div className=\"input-container ic1\">\n                <input id=\"seller-fullname\" className=\"input\" type=\"text\" minLength=\"0\" maxLength=\"50\" placeholder=\" \" onKeyUp={isValidName} />   \n                <div className=\"error\"></div>  \n                <div className=\"cut cut-short\"></div>\n                <label htmlFor=\"seller-fullname\" className=\"placeholder\">اسم البائع  <b style={{'color': 'red','fontSize':' 15px'}}>*</b></label>\n            </div>\n            <div className=\"input-container ic1\">\n                <input id=\"vatnumber\" className=\"input\" type=\"text\" minLength=\"0\" maxLength=\"15\" placeholder=\" \" onKeyUp={isValidVAT}/>\n                <div className=\"error\"></div>\n            <div className=\"cut\"></div>\n                <label htmlFor=\"vatnumber\" className=\"placeholder\">الرقم الضريبي <b style={{'color': 'red','fontSize':' 15px'}}>*</b></label>\n                <div className=\"error\"></div>\n            </div>\n        </div>\n        <div className=\"subtitle\">معلومات البائع</div>\n        <div className=\"form\">\n            <div className=\"input-container ic1\">\n                <input id=\"store_name\" className=\"input\" type=\"text\" placeholder=\" \" onKeyUp={updateStoreName} />   \n                <div className=\"cut cut-short\"></div>\n                <label htmlFor=\"store_name\" className=\"placeholder\">اسم المحل</label>\n            </div>\n            <div className=\"input-container ic1\">\n                <input id=\"store_city\" className=\"input\" type=\"text\" minLength=\"0\" maxLength=\"15\" placeholder=\" \" onKeyUp={updateStoreCity}/>\n                <div className=\"error\"></div>\n            <div className=\"cut cut-very-short\"></div>\n                <label htmlFor=\"store_city\" className=\"placeholder\">المدينة</label>\n                <div className=\"error\"></div>\n            </div>\n            <div className=\"input-container ic1\">\n                <textarea id=\"store_address\" className=\"input\" type=\"text\" placeholder=\" \" onKeyUp={updateStoreAddress} />   \n                <div className=\"error\"></div>  \n                <div className=\"cut cut-short\"></div>\n                <label htmlFor=\"store_address\" className=\"placeholder\">عنوان المحل</label>\n            </div>\n            <div className=\"input-container ic1\">\n                <input id=\"store_phone\" className=\"input\" type=\"text\" minLength=\"0\" maxLength=\"10\" placeholder=\" \" onKeyUp={updateStorePhone}/>\n                <div className=\"error\"></div>\n            <div className=\"cut cut-short\"></div>\n                <label htmlFor=\"store_phone\" className=\"placeholder\">رقم الهاتف</label>\n                <div className=\"error\"></div>\n            </div>\n        </div>\n        </>\n    )\n}\n","import './styles/InvoiceInputForm.css';\nimport $ from 'jquery'; \nimport {useState} from 'react'\nimport ReactDOMServer from 'react-dom/server';\nimport PrintInvoice from './PrintInvoice.js';\nimport { BsFillPlusSquareFill } from 'react-icons/bs';\nimport { AiFillMinusSquare } from 'react-icons/ai';\n// import { createElement } from 'react/cjs/react.production.min';\n// import TestPrintedInvoice from './TestPrintedInvoice';\n\nexport default function InvoiceInputForm({sellerInfo}) {\n    const [placedOrders, setPlacedOrders] = useState()\n    const [showInvoice, setShowInvoice] = useState(false)\n\n    function iterateTable(){\n        const table = document.getElementById(\"invoice-input-form\");\n        const children = table.children;\n        const orders = [];\n        let total = 0\n        const descs = \"#item-description\"\n        const quantity = \"#item-quantity\"\n        const pricess = \"#item-price\"\n        \n        for (let i = 0; i < children.length; i++) {\n            orders[i] =  {\n                'describtion' : children[i].querySelector(descs).value,\n                // 'type' : types[i].value,\n                // 'weight': weights[i].value,\n                'qt' : children[i].querySelector(quantity).value,\n                'price': parseFloat(children[i].querySelector(pricess).value)\n            }\n            total += children[i].querySelector(pricess).value * children[i].querySelector(quantity).value\n        }\n        orders['total'] = total;\n        setPlacedOrders(orders);\n        setShowInvoice(true);\n        window.scrollTo(0, document.body.scrollHeight || document.documentElement.scrollHeight);\n    }\n\n    //delete row from the form on delete button click\n    $(document).ready(function () {\n        $(\"#invoice-input-form\").on('click', '.delete-btn', function () {\n            const form = document.getElementById('invoice-input-form');\n            // console.log(form)\n            const count = form.childElementCount\n            if (count > 1) $(this).closest('#row').remove();\n            // form.removeChild(form.lastChild);\n        });\n    })\n\n    //Convert Arabic numbers to English\n    function arToEng_nubers(el){\n\n        if(!el.target.value) el.target.value = \"\"; //setter()\n        let nubStr = el.target.value.toString()\n        const a2e = nubStr.replace(/[٠-٩]/g, d => '٠١٢٣٤٥٦٧٨٩'.indexOf(d))\n\n        el.target.value = a2e;\n    }\n\n    // insert new row to the form when add button is clicked\n    function insertNewItem(){\n        const form = document.getElementById(\"invoice-input-form\");\n        var row = document.createElement('div') \n        var descDiv = document.createElement('div')\n        var qtDiv = document.createElement('div')\n        var priceDiv = document.createElement('div')\n        var button = document.createElement('div')\n\n        row.className = 'form-nowrap';\n        row.id = 'row'\n\n        //Add classes\n        descDiv.className = \"input-nowrap flx-3 ic1\";\n        qtDiv.className = \"input-nowrap flx-1 ic1\";\n        priceDiv.className = \"input-nowrap ic1\";\n        button.className = \"buttons-control\"\n\n        // Add elements to the divs\n        descDiv.innerHTML = ReactDOMServer.renderToString(\n            <>\n                <textarea id=\"item-description\" className=\"input\" type=\"text\" placeholder=\" \"/>   \n                <div className=\"cut cut-very-short\"></div>\n                <label htmlFor=\"item-description\" className=\"placeholder\">الوصف</label>\n            </>)\n        \n        qtDiv.innerHTML = ReactDOMServer.renderToString(\n            <>\n                <input id=\"item-quantity\" className=\"input\" type=\"text\" onChange={e => arToEng_nubers(e)} placeholder=\" \"/>\n                <div className=\"cut cut-very-short\"></div>\n                <label htmlFor=\"item-quantity\" className=\"placeholder\">الكمية</label>\n            </>)\n\n        priceDiv.innerHTML = ReactDOMServer.renderToString(\n            <>\n                <input id=\"item-price\" className=\"input\" type=\"text\" onChange={e => arToEng_nubers(e)} placeholder=\" \"/>\n                <div className=\"cut cut-very-short\"></div>\n                <label htmlFor=\"tem-price\" className=\"placeholder\">السعر</label>\n            </>)\n\n        button.innerHTML =  ReactDOMServer.renderToString(<AiFillMinusSquare size={23} className=\"delete-btn\"/>); \n        \n        // insert divs to the row then to the form\n        row.appendChild(descDiv)\n        row.appendChild(qtDiv)\n        row.appendChild(priceDiv)\n        row.appendChild(button)\n        form.appendChild(row)\n\n        //Add onKeyUp functions\n        $(priceDiv).on('keyup', (e) => {arToEng_nubers(e)})\n        $(qtDiv).on('keyup', (e) => {arToEng_nubers(e)})\n    }\n\n    return (\n        <>\n            <div className=\"title\">تفاصيل الفاتورة</div>\n            <div id=\"invoice-input-form\">\n                <div id='row' className=\"form-nowrap\">\n                    <div className=\"input-nowrap flx-3 ic1\">\n                        <textarea id=\"item-description\" className=\"input\" type=\"text\" placeholder=\" \"/>   \n                        <div className=\"cut cut-very-short\"></div>\n                        <label htmlFor=\"item-description\" className=\"placeholder\">الوصف</label>\n                    </div>\n                    <div className=\"input-nowrap flx-1 ic1\">\n                        <input id=\"item-quantity\" className=\"input\" type=\"text\" onChange={e => arToEng_nubers(e)}  placeholder=\" \"/>\n                        <div className=\"cut cut-very-short\"></div>\n                        <label htmlFor=\"item-quantity\" className=\"placeholder\">الكمية</label>\n                    </div>\n                    <div className=\"input-nowrap ic1\">\n                        <input id=\"item-price\" className=\"input\" type=\"text\" onChange={e => arToEng_nubers(e)} placeholder=\" \"/>\n                        <div className=\"cut cut-very-short\"></div>\n                        <label htmlFor=\"tem-price\" className=\"placeholder\">السعر</label>\n                    </div>\n                    <div className='buttons-control'>\n                        <BsFillPlusSquareFill className=\"insert-btn\" size={19} onClick={insertNewItem}/>\n                    </div>\n                </div>\n            </div>\n            <div className=\"form-submit\"> <input className=\"btn btn-primary form-submitBtb\" type=\"submit\" value=\"إصدار\" onClick={iterateTable}/> </div>\n\n            {showInvoice ? <PrintInvoice data={placedOrders} total={placedOrders.total} sellerInfo={sellerInfo}/>: \"\"}\n        </>\n    )\n}\n","import './styles/App.css'\nimport {useState } from 'react';\n// import Invoice from './Incoive.js'\nimport SellerInfo from './SellerInfo';\nimport InvoiceInputForm from './InvoiceInputForm';\n// import TestInputForm from './TestInputForm';\n// import TestInvoiceInputForm from './TestInvoiceInputForm1';\n\n\nfunction App() {\n  const [validation, setValidation] = useState(false)\n  const [sellerInfo, setSellerInfo] = useState()\n  return (\n    <div className=\"App\">\n      <SellerInfo validation={setValidation} sellerInfo={setSellerInfo}/>\n      {validation ? <InvoiceInputForm sellerInfo={sellerInfo}/> : null}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
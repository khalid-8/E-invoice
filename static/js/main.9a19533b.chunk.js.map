{"version":3,"sources":["TestInvoice.js","InvoiceInputForm.js","App.js","index.js"],"names":["TestInvoice","props","getTLVfromValue","tagNum","tagValue","bufsArray","Buffer","from","length","concat","class","id","onClick","htmlToImage","document","getElementById","quality","then","dataUrl","createElement","download","pdf","jsPDF","imgProps","getImageProperties","pdfWidth","internal","pageSize","getWidth","pdfHeight","height","width","addImage","save","className","value","order","Seller","VatReg","timeStamp","Date","toLocaleString","timeZone","console","log","tagsBufsArray","amount","vat","toString","createQrCode","total","size","toISOString","slice","data","map","row","describtion","type","weight","qt","price","style","InvoiceInputForm","useState","placedOrders","setPlacedOrders","showInvoice","setShowInvoice","$","ready","on","this","closest","remove","dir","placeholder","table","insertRow","rows","descr","insertCell","quantity","deleteOpt","innerHTML","ReactDOMServer","renderToString","orders","descs","getElementsByClassName","types","weights","pricess","i","parseFloat","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9a19533b.chunk.js","sourcesContent":["import './styles/Invoice.css'\n// import jsPDF from 'jspdf';\n// import html2canvas from 'html2canvas';\n// import html2pdf from 'html2pdf.js';\n// import ReactDOM from 'react-dom'\nimport jsPDF from 'jspdf';\nimport * as htmlToImage from 'html-to-image';\nimport QRCode from \"react-qr-code\";\n\nexport default function TestInvoice(props) {\n    // let totalPrice = 0\n\n    const SellerName = \"khalid Salem Alnahdi\"\n    const VatNum = \"100025906700003\"\n\n    function getTLVfromValue(tagNum, tagValue){\n        const tagBuf = Buffer.from([tagNum], 'utf8')\n        const tagValueLenBuf = Buffer.from([tagValue.length], 'utf8')\n        let tagValueBuf = Buffer.from(tagValue, 'utf8')\n        \n        const bufsArray = [tagBuf, tagValueLenBuf, tagValueBuf]\n        // console.log(bufsArray)\n        return Buffer.concat(bufsArray)\n    }\n\n    function createQrCode(order){\n        //seller Name\n        const Seller = getTLVfromValue(\"1\", SellerName)\n        //VAT Number\n        const VatReg = getTLVfromValue(\"2\", VatNum)\n        //Time Stamp\n        const timeStamp = getTLVfromValue(\"3\", new Date().toLocaleString(\"en-US\", {timeZone: \"Asia/Riyadh\"}))//new Date().toISOString())\n        console.log()\n        //Invoice Amount\n        const invoiceAmount = getTLVfromValue(\"4\", order.amount)\n        //VAT Amount\n        const VatAmount = getTLVfromValue(\"5\", order.vat)\n\n        const tagsBufsArray = [Seller, VatReg, timeStamp, invoiceAmount, VatAmount]\n\n        const qrCodeBuf = Buffer.concat(tagsBufsArray)\n        const qrCodeB64 = qrCodeBuf.toString('base64')\n        return qrCodeB64\n    }\n\n\n    function downloadPDF(){\n        htmlToImage.toPng(document.getElementById('invoice'), { quality: 0.95 })\n        .then(function (dataUrl) {\n            let link = document.createElement('a');\n            link.download = 'my-image-name.jpeg';\n            const pdf = new jsPDF() //('l', 'in', [842.4, 1188]);\n            const imgProps= pdf.getImageProperties(dataUrl);\n            const pdfWidth = pdf.internal.pageSize.getWidth();\n            const pdfHeight = (imgProps.height * pdfWidth) / imgProps.width;\n            pdf.addImage(dataUrl, 'PNG', 0, 0, pdfWidth, pdfHeight);\n            pdf.save(\"download.pdf\"); \n        });\n    }\n\n    //html2pdf method to print PDF\n    // function downloadPDF(){\n    //     const invoice = document.getElementById(\"invoice\");\n    //     let height = Math.max(invoice.scrollHeight, invoice.offsetHeight,\n    //         window.clientHeight, window.scrollHeight, window.offsetHeight)\n    //     let heightCM = height / 35.35\n    //     console.log(invoice);\n    //     // console.log(window);\n    //     var opt = {\n    //         margin: 1,\n    //         filename: 'myfile.pdf',\n    //         image: { type: 'jpeg', quality: 0.99 },\n    //         html2canvas: { dpi: 192, letterRendering: true },\n    //         jsPDF: { unit: 'in', format: 'letter', orientation: 'portrait' }\n    //     };\n    //     html2pdf().from(invoice).set(opt).save();\n    // }\n\n    function TableRow(data){\n        return(\n            <tr>\n                <td>\n                    <h6 class=\"mb-0\">{data.describtion}</h6>\n                </td>\n                    <td>{data.type}</td>\n                <td>{data.weight}g</td>\n                <td>{data.qt}</td>\n                <td><span class=\"font-weight-semibold\">{data.price*data.qt} ر.س</span></td>\n            </tr>\n        )\n    }\n    return (\n        <>\n            <div class=\"container d-flex justify-content-center mt-50 mb-50\">\n                <div class=\"row\">\n                    <div class=\"col-md-12 text-right mb-3\"> \n                        <button class=\"btn btn-primary\" id=\"download\" onClick={downloadPDF}> download pdf</button>\n                    </div>\n                    <div class=\"col-md-12\">\n                        <div class=\"card\" id=\"invoice\">\n                            <div class=\"card-header bg-transparent header-elements-inline\">\n                                <div class=\"invoie-type\"> \n                                    <p>فاتورة ضريبية مبسطة</p>\n                                    <p>Simplified Tax Invoice</p>\n                                </div>\n                            </div>\n                            <div class=\"card-body\">\n                                <div class=\"row info-row\">\n                                    <div class=\"\">\n                                            <ul class=\"list list-unstyled mb-0\">\n                                                <b class=\"text-primary\">اسم المحل</b>\n                                                <li >عنوان المحل</li>\n                                                <li>جدة</li>\n                                                <li>0546491279 </li>\n                                            </ul>\n                                    </div>\n                                    <div className=\" barcode-tag\"> <QRCode value={createQrCode({'amount': props.total.toString(), 'vat': (props.total*0.15).toString()})} size={110}/></div>\n                                    <div class=\"\">\n                                        <h6 class=\"invoice-color mb-2 \">Invoice #BBB1243</h6>\n                                        <p>التاريخ: <span class=\"font-weight-semibold\">{new Date().toISOString().slice(0, 10)}</span></p>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"table-responsive\">\n                                <table class=\"table table-lg main-table\">\n                                    <thead>\n                                        <tr>\n                                            <th>الوصف</th>\n                                            <th>العيار</th>\n                                            <th>الوزن</th>\n                                            <th>الكمية</th>\n                                            <th>السعر</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {props.data.map((row) => TableRow(row))}\n                                    </tbody>\n                                </table>\n                            </div>\n                            <div class=\"card-body\">\n                                    <div class=\"total-barcode\">\n                                        <div class=\"total-tableTitle pt-2 mb-3 wmin-md-400 ml-auto\"> \n                                            <h6 class=\"mb-3 text-right\" style={{'margin-right': '2em'}} >الإجمالي</h6>\n                                            <div class=\"table-responsive\">\n                                                <table class=\"table checkout-table\">\n                                                    <tbody className=\"total_table\">\n                                                        <tr>\n                                                            <td class=\"text-left\">{props.total.toLocaleString()} ر.س</td>\n                                                            <th class=\"text-right total\" style={{'direction': 'rtl'}}>المجموع <span class=\"text-muted without-tax\">(غير شامل ضريبة القيمة المضافة):</span></th>\n                                                        </tr>\n                                                        <tr>\n                                                            <td class=\"text-left\">{(props.total * 0.15).toLocaleString()} ر.س</td>\n                                                            <th class=\"text-right\" style={{'direction': 'rtl'}}>ضريبة القيمة المضافة <span class=\"font-weight-normal\">(15%):</span></th>\n                                                        </tr>\n                                                        <tr>\n                                                            <td class=\"text-left text-primary\">\n                                                                <h6  class=\"font-weight-semibold total-include-tax\">{(props.total + (props.total * 0.15)).toLocaleString()} ر.س</h6>\n                                                            </td>\n                                                            <th class=\"text-right\">:المجموع</th>\n                                                            \n                                                        </tr>\n                                                    </tbody>\n                                                </table>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n            </div>\n    </>\n    )\n}\n\n//<img src=\"barcode.png\" alt=\"Barcode\"/> \n\n// <page backtop=\"10mm\" backbottom=\"20mm\" backleft=\"20mm\" backright=\"20mm\" style={{\"font-family\": \"dejavusans\"}}>\n","import './styles/InvoiceInputForm.css'\nimport {useState} from 'react'\nimport $ from 'jquery'; \nimport ReactDOMServer from 'react-dom/server';\nimport TestInvoice from './TestInvoice.js';\nimport { BsFillPlusSquareFill } from 'react-icons/bs';\nimport { AiFillMinusSquare } from 'react-icons/ai';\n\n\nexport default function InvoiceInputForm() {\n    const [placedOrders, setPlacedOrders] = useState()\n    const [showInvoice, setShowInvoice] = useState(false)\n    // let totalPrice = 0\n    // const [totalPrice, setTotalPrice] = useState(0)\n\n    function iterateTable(){\n        const table = document.getElementById(\"myTable\");\n        const orders = [];\n        let total = 0\n        const descs = document.getElementsByClassName(\"desc-input\")\n        const types = document.getElementsByClassName(\"select-input\")\n        const weights = document.getElementsByClassName(\"wight-input\")\n        const quantity = document.getElementsByClassName(\"qt-input\")\n        const pricess = document.getElementsByClassName(\"price-input\")\n        \n        for (let i = 0; i < (table.rows.length - 1); i++) {\n            orders[i] =  {\n                'describtion' : descs[i].value,\n                'type' : types[i].value,\n                'weight': weights[i].value,\n                'qt' : quantity[i].value,\n                'price': parseFloat(pricess[i].value )\n            }\n            total += orders[i].price \n        }\n        orders['total'] = total\n        setPlacedOrders(orders)\n        setShowInvoice(true)\n    }\n\n    const typeOptions = \n        `\n            <select class=\"form-control form-control-sm select-input\" id=\"selectType\">\n                <option class=\"option-type\">18 قيراط</option>\n                <option> 21 قيراط</option>\n                <option>12 قيراط</option>\n            </select>\n        `\n\n\n    //delete row from the form on delete button click\n    $(document).ready(function () {\n        $(\"#myTable\").on('click', '.delete-rowBtn', function () {\n            // alert(\"are YOU Sure!\")\n            $(this).closest('tr').remove();\n        });\n    })\n\n    function insertNewItem(){\n        const table = document.getElementById(\"myTable\");\n        console.log(table)\n        // Create an empty <tr> element and add it to the 1st position of the table:\n        const row = table.insertRow(table.rows.length);\n        // Insert new cells (<td> elements) inside our table:\n        const descr = row.insertCell(0);\n        const type = row.insertCell(1);\n        const weight = row.insertCell(2);\n        const quantity = row.insertCell(3)\n        const price = row.insertCell(4);\n        const deleteOpt = row.insertCell(5);\n\n        // Add some text to the new cells:\n        descr.innerHTML = '<h6 class=\"font-weight-semibold\"> <input class=\"input-desc desc-input\" type=\"text\" id=\"orderDesc\" dir=\"rtl\" placeholder=\"ادخل معلومات المنتج\"/> </h6> '\n        //Add class name to the description div\n        descr.className = \"tableBody-cells\" \n        //type field\n        type.innerHTML = typeOptions;\n        //weight field\n        weight.innerHTML = '<input class=\"imput-num wight-input\"/>'\n        //quantity field\n        quantity.innerHTML = '<td class=\"tableBody-cells qt-cell\"><input class=\"imput-num qt-input\" type=\"number\" /></td>'\n        //price field\n        price.innerHTML = '<span class=\"font-weight-semibold\"><input class=\"imput-num price-input\"/></span>'\n        // delete row icon\n        deleteOpt.innerHTML = ReactDOMServer.renderToString(<AiFillMinusSquare size={23} class=\"delete-rowBtn\"/>);\n        //<AiFillMinusSquare size={23} class=\"delete-rowBtn\"/>\n    }\n    return (\n        <>\n            <div className=\"input-form\">\n                <table class=\"table table-sm\" id=\"myTable\">\n                <thead>\n                    <tr>\n                        <th class=\"teable-cols desc-col\">الوصف</th>\n                        <th class=\"teable-cols\">العيار</th>\n                        <th class=\"teable-cols\">الوزن</th>\n                        <th class=\"teable-cols\">الكمية</th>\n                        <th class=\"teable-cols\">السعر</th>\n                        \n                    </tr>\n                </thead>\n                <tbody class=\"tableBody\">\n                    <tr>\n                        <td class=\"tableBody-cells\">\n                            <h6 class=\"font-weight-semibold\"> <input class=\"input-desc desc-input\" type='text' id=\"orderDesc\" dir=\"rtl\" placeholder='ادخل معلومات المنتج'/> </h6> \n                        </td>\n                        <td class=\"tableBody-cells\"> \n                            <select class=\"form-control form-control-sm select-input\" id=\"selectType\">\n                                <option>18 قيراط</option>\n                                <option>21 قيراط</option>\n                                <option>12 قيراط</option>\n                            </select>\n                        </td>\n                        <td class=\"tableBody-cells wight-cell\"><input class=\"imput-num wight-input\"/></td>\n                        <td class=\"tableBody-cells qt-cell\"><input class=\"imput-num qt-input\" type=\"number\" /></td>\n                        <td class=\"tableBody-cells\"> <input class=\"imput-num price-input\"/></td>\n                        <td> <AiFillMinusSquare size={23} class=\"delete-rowBtn\"/> </td>\n                    </tr>\n                    </tbody>\n                </table> \n                <BsFillPlusSquareFill className=\"insert-new-itemBtn\" size={19} onClick={insertNewItem}/>\n            \n            </div>\n            <div className=\"form-submit\"> <input class=\"btn btn-primary form-submitBtb\" type=\"submit\" value=\"إصدار\" onClick={iterateTable}/> </div>\n\n            {showInvoice ? <TestInvoice data={placedOrders} total={placedOrders.total}/> : \"\"}\n        </>\n    )\n}\n\n\n//<span class=\"text-muted\"><input class=\"input-desc\" type='text'/></span>","import './styles/App.css'\n// import Invoice from './Incoive.js'\nimport InvoiceInputForm from './InvoiceInputForm';\n\n\nfunction App() {\n\n  \n  return (\n    <div className=\"App\">\n      <InvoiceInputForm/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}